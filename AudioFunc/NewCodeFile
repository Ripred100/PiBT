import java.io.File;
import java.util.Random;
import javax.sound.sampled.*;

public class PlayAudio
{

    private long time=0L;
    private boolean status;
   public Clip clip;
    AudioInputStream audioInputStream;
    private  static int file;
    public int num1=0;

    public PlayAudio(int file, float volume)
    {
        this.file=file;
        try
        {
            audioInputStream = AudioSystem.getAudioInputStream(new File("C://Users//DarkKnight528491//Desktop/Play/" + file +".wav"));
            clip = AudioSystem.getClip();
            clip.open(audioInputStream);
            setVolume(volume,clip);
            clip.addLineListener( new LineListener()
            {

                 public void update(LineEvent evt)
                 {

                     if (evt.getType() == LineEvent.Type.STOP)
                        {
                                pausePlay();
                                suffle();


                        }
                 }
            });

            clip.start();

        }
        catch (Exception e)
        {
            System.out.println("ERROR: Audio malfunction");
            e.printStackTrace();
        }

    }

    public void pausePlay()
    {
        time=clip.getMicrosecondPosition();
        clip.stop();
        clip.close();
    }

    public void resumePlay()
    {
        try
        {
            audioInputStream = AudioSystem.getAudioInputStream(new File("C://Users//DarkKnight528491//Desktop/Play/" + file +".wav"));
            clip = AudioSystem.getClip();
            clip.open(audioInputStream);
            clip.loop(Clip.LOOP_CONTINUOUSLY);
            clip.setMicrosecondPosition(this.time);
            clip.start();
        }
        catch (Exception e)
        {
            System.out.println("ERROR: Audio malfunction");
            e.printStackTrace();
        }

    }

    public void nextAudio()
    {
        file++;
        try
        {
            audioInputStream = AudioSystem.getAudioInputStream(new File("C://Users//DarkKnight528491//Desktop/Play/" + file +".wav"));
            clip = AudioSystem.getClip();
            clip.open(audioInputStream);
            clip.start();
        }
        catch (Exception e)
        {
            System.out.println("ERROR: Audio malfunction");
            e.printStackTrace();
        }

    }

    public void previousAudio()
    {
        file--;
        try
        {
            audioInputStream = AudioSystem.getAudioInputStream(new File("C://Users//DarkKnight528491//Desktop/Play/" + file +".wav"));
            clip = AudioSystem.getClip();
            clip.open(audioInputStream);
            clip.start();
        }
        catch (Exception e)
        {
            System.out.println("ERROR: Audio malfunction");
            e.printStackTrace();
        }

    }

    public void suffle()
    {
        Random randomNum= new Random();
        num1=randomNum.nextInt(2+1);

        try
        {
            audioInputStream = AudioSystem.getAudioInputStream(new File("C://Users//DarkKnight528491//Desktop/Play/" + num1 +".wav"));
            clip = AudioSystem.getClip();
            clip.open(audioInputStream);
            clip.start();
        }
        catch (Exception e)
        {
            System.out.println("ERROR: Audio malfunction");
            e.printStackTrace();
        }

    }


    public void setVolume(float vol,Clip clip)
    {
        FloatControl control= (FloatControl)clip.getControl(FloatControl.Type.MASTER_GAIN);

        control.setValue(vol);
    }








}
