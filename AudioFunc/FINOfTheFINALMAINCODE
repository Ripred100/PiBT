import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import java.io.File;
import java.io.IOException;
import java.util.InputMismatchException;
import java.util.Scanner;

public class PlayAudioTest {


    public static String fileWay = "C://Users//DarkKnight528491//Desktop/Play/byebye/";
    public static void main(String[] args) throws IOException, LineUnavailableException, UnsupportedAudioFileException
    {
        Scanner input = new Scanner(System.in);
        int option = 0, preOption;
        File f = new File(fileWay);
        for(File fr : f.listFiles()){
            if(!PlayAudio.songs.contains(fr.getName())){
                String extension = "";
                int i = fr.getPath().lastIndexOf('.');
                if (i > 0) {
                    extension =  fr.getPath().substring(i+1);
                }
                if(extension.equalsIgnoreCase("wav")) {
                    PlayAudio.songs.addLast(fr.getName());
                    System.out.println(fr.getName() + " added");
                }

            }

        }
        if(PlayAudio.songs.isEmpty()){
            System.out.println("No songs. Cancelled");
            return;
        }
        PlayAudio test = new PlayAudio(0);

        System.out.println("1.Pause\n2.Resume\n3.NextSong\n4.PreviousSong\n5.Shuffle\n6.Toggle Shuffle Mode");


        while (true) {


            preOption = option;

                option = input.nextInt();

                if (option != preOption) {


                    switch (option) {
                        case 1:
                            test.pausePlay();
                            break;

                        case 2:
                            if (preOption == 1) {
                                test.resumePlay();
                            } else {
                                System.out.println("You're already playing the song");
                            }
                            break;

                        case 3:
                            test.pausePlay();
                            test.nextAudio();
                            option = 0;
                            break;

                        case 4:
                            test.pausePlay();
                            test.previousAudio();
                            option = 0;
                            break;

                        case 5:
                            if (preOption != 1) {
                                test.pausePlay();
                                test.suffle();
                                option = 0;
                            } else if (preOption == 1) {
                                test.suffle();
                                option = 0;
                            }
                            break;
                        case 6:
                            if (PlayAudio.shuffle)
                                PlayAudio.shuffle = false;
                            else PlayAudio.shuffle = true;
                            break;
                    }

                } else {
                    System.out.println("This option has already been selected");
                }

        }

    }


}
